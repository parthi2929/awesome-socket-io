<!-- Socket IO Client Side Operations -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
<script>        
  $(document).ready(    //1. When document is ready
        function()
        {
            //2. Initialize 
            var socketClient = io();            
            $("#chatWindow").hide();  
            var currentUserName = "Anonymous";

            //3. When form button is submitted 
            $("#messageForm").submit(
                function()
                {
                    //4. Emit socket with "New Message Event" event name and actual new message
                    socketClient.emit( "New Message Event", $("#newMessageID").val(),
                        function(anyServerNotification)
                        {
                            $("#messagesID").append("<p align='right'>" +  anyServerNotification + "</p>");
                            scrollCorrect();
                        }
                    );

                    //5. Clear the new message in client form to enable user to enter new message
                    $("#newMessageID").val("");

                    //6. Prevent any default button behaviour further
                    return false; //also event.preventDefault() would do (if you passed event object in submit's callback function)
                }
            );

            //4. Receive if any broadcast event message from server
            socketClient.on(
                "Broadcast Event",
                function(receivedData)
                {
                    //4.1 Update received message in our page
                    console.log("Current User: " + currentUserName);
                    console.log("Sender Name: " + receivedData.senderName);
                    if (currentUserName === receivedData.senderName)
                    {
                        var formattedText = "<p align='right'>" + "<b>" + receivedData.senderName + ":</b> " + receivedData.message + "</p>";     
                    }
                    else
                    {
                        var formattedText = "<p align='left'>" + "<b>" + receivedData.senderName + ":</b> " + receivedData.message + "</p>";     
                    }
                    console.log("Formatted Text:",formattedText);
                    //var newliElement = $("<li >", { "class": "list-group-item" }).append(formattedText);
                    $("#messagesID").append(formattedText);                  //append to ul element in our page

                    scrollCorrect();
                }
            );    

            //5. USER VALIDATION TRIGGER AND RESPONSE FOR SERVER'S RESULT
            $("#userForm").submit(  //this to happen once user presses submit in user form..
                function()
                {
                    currentUserName =  $("#userNameID").val();
                    socketClient.emit(
                        "New User Validation Event",    //agreed event name
                        currentUserName,         //entered user name to be sent
                        function(validationResult)
                        {
                            if (validationResult)   //good to go, show chat window
                            {
                                $("#userWindow").hide();    //why would we still ask him another user name
                                $("#chatWindow").show();  
                                $("#newMessageID").focus();                                                               
                                console.log("New user name registered: " + currentUserName);
                            }
                            else
                            {
                                $("#userNameError").html("Sorry. User Name exists. Try another one");
                            }                        
                        }
                    );
                    $("#userNameID").val("");
                    return false;
                }                    
            );  
            
            //ONLINE USERS LISTING EVENT
            socketClient.on(
                "Online Users Listing Event",
                function(usersNameArray)
                {
                    console.log("emitting online users..")
                    $("#onlineUsersID").html("");
                    for (i=0; i < usersNameArray.length; i++)
                    {
                        var newliElement = $("<li>", { "class": "list-group-item" }).text(usersNameArray[i]);     
                        $("#onlineUsersID").append(newliElement);
                    }
                }                
            );

            //WHISPER EVENT: SOMEONE SENT PRIVATE MSG TO ME ;)
            socketClient.on(
                "Whisper Event",
                function(senderDetails)
                {
                    var formattedText = "<p align='left' class='whisper'>" + "<b>" + senderDetails.senderName + "(private):</b> " + senderDetails.senderPrivateMessage + "</p>";     
                    $("#messagesID").append(formattedText);
                    scrollCorrect();
                }
            );

            //PRIVATE EVENT: SERVER ACKNOWLEDGMENT OF MY PRIVATE MSG
            socketClient.on(
                "Private Event",
                function(details)
                {
                    var formattedText = "<p align='right' class='whisper'>" + "<b>" + details.receiverName + "(private):</b> " + details.senderPrivateMessage + "</p>";     
                    $("#messagesID").append(formattedText);
                    scrollCorrect();
                }
            );

            function scrollCorrect()
            {
                $("#chatWrap").scrollTop($("#messagesID").outerHeight());
            }            

        }
  );
</script>